services:
  ast:
    container_name: ast
    build: ./ast
    volumes:
      - projekt_4:/projekt_4
      - ./ast:/ast
    # expose a port to the docker network (ports binds them to host)
    expose:
      - 5000
    networks:
      - projekt_4_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:5000/healthy"]
      interval: 30s
      timeout: 5s
      retries: 5
  
  flask:
    container_name: flask
    build: ./flask
    volumes:
      - projekt_4:/projekt_4
      - ./flask:/flask
    # bind host port 5001 to container port 5000 (use this to access flask app)
    ports:
      - 5001:5000
    depends_on:
      ast:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - projekt_4_network
    environment:
      CELERY_BROKER_URL: redis://redis:5672
      CELERY_RESULT_BACKEND: redis://redis:5672
      REDIS_HOST: redis
      REDIS_PORT: 6379
  
  redis:
    container_name: redis
    image: redis
    expose:
      - 6379
    networks:
      - projekt_4_network


volumes:
  projekt_4:
  
networks:
  projekt_4_network:
    driver: bridge